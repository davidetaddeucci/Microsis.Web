@page "/"
@using Microsis.Names.Models
@using Microsis.Web.Reserved.Services
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Grids
@inject IBannerService BannerService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Dashboard - Microsis Amministrazione</PageTitle>

<div class="container-fluid">
    <h1 class="mb-4">Dashboard</h1>
    
    <div class="row mb-4">
        <div class="col-md-4 mb-3">
            <SfCard CssClass="dashboard-card">
                <CardHeader Title="Banner" />
                <CardContent>
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4">@bannerCount</h2>
                            <p>Banner attivi</p>
                        </div>
                        <div class="dashboard-icon">
                            <i class="fa fa-image"></i>
                        </div>
                    </div>
                    <div class="mt-3">
                        <SfButton CssClass="e-outline" OnClick="() => NavigationManager.NavigateTo('/banners')">
                            Gestisci <i class="fa fa-arrow-right ms-2"></i>
                        </SfButton>
                    </div>
                </CardContent>
            </SfCard>
        </div>
        
        <div class="col-md-4 mb-3">
            <SfCard CssClass="dashboard-card">
                <CardHeader Title="News" />
                <CardContent>
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4">@newsCount</h2>
                            <p>Notizie pubblicate</p>
                        </div>
                        <div class="dashboard-icon">
                            <i class="fa fa-newspaper"></i>
                        </div>
                    </div>
                    <div class="mt-3">
                        <SfButton CssClass="e-outline" OnClick="() => NavigationManager.NavigateTo('/news')">
                            Gestisci <i class="fa fa-arrow-right ms-2"></i>
                        </SfButton>
                    </div>
                </CardContent>
            </SfCard>
        </div>
        
        <div class="col-md-4 mb-3">
            <SfCard CssClass="dashboard-card">
                <CardHeader Title="Gallerie Foto" />
                <CardContent>
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="display-4">@photoCount</h2>
                            <p>Foto caricate</p>
                        </div>
                        <div class="dashboard-icon">
                            <i class="fa fa-camera"></i>
                        </div>
                    </div>
                    <div class="mt-3">
                        <SfButton CssClass="e-outline" OnClick="() => NavigationManager.NavigateTo('/gallerie')">
                            Gestisci <i class="fa fa-arrow-right ms-2"></i>
                        </SfButton>
                    </div>
                </CardContent>
            </SfCard>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-8 mb-3">
            <SfCard CssClass="dashboard-card">
                <CardHeader Title="Ultime News" />
                <CardContent>
                    @if (latestNews.Any())
                    {
                        <SfGrid DataSource="@latestNews" AllowPaging="false" AllowSorting="true" Height="300">
                            <GridColumns>
                                <GridColumn Field=@nameof(News.Titolo) HeaderText="Titolo" Width="250"></GridColumn>
                                <GridColumn Field=@nameof(News.DataPubblicazione) HeaderText="Data" Format="dd/MM/yyyy" Width="120"></GridColumn>
                                <GridColumn Field=@nameof(News.IsAttiva) HeaderText="Attiva" Width="100">
                                    <Template>
                                        @{
                                            var news = (context as News);
                                            <span class="@(news.IsAttiva ? "status-active" : "status-inactive")">
                                                @(news.IsAttiva ? "Sì" : "No")
                                            </span>
                                        }
                                    </Template>
                                </GridColumn>
                                <GridColumn HeaderText="Azioni" Width="120">
                                    <Template>
                                        @{
                                            var news = (context as News);
                                            <div class="action-buttons">
                                                <SfButton CssClass="e-small e-round" IconCss="e-icons e-edit" 
                                                          OnClick="() => NavigationManager.NavigateTo($"/news/edit/{news.ID}")"></SfButton>
                                                <SfButton CssClass="e-small e-round" IconCss="e-icons e-eye"
                                                          OnClick="() => NavigationManager.NavigateTo($"/news/view/{news.ID}")"></SfButton>
                                            </div>
                                        }
                                    </Template>
                                </GridColumn>
                            </GridColumns>
                        </SfGrid>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <p>Nessuna news disponibile.</p>
                        </div>
                    }
                </CardContent>
            </SfCard>
        </div>
        
        <div class="col-md-4 mb-3">
            <SfCard CssClass="dashboard-card">
                <CardHeader Title="Banner Attivi" />
                <CardContent>
                    @if (activeBanners.Any())
                    {
                        <div class="banner-list">
                            @foreach (var banner in activeBanners)
                            {
                                <div class="banner-item">
                                    <div class="banner-image">
                                        <img src="@banner.Path" alt="@banner.Title" />
                                    </div>
                                    <div class="banner-details">
                                        <h6>@banner.Title</h6>
                                        <small>@(banner.IsAttivo ? "Attivo" : "Inattivo")</small>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <p>Nessun banner attivo.</p>
                        </div>
                    }
                </CardContent>
            </SfCard>
        </div>
    </div>
</div>

<style>
    .dashboard-card {
        height: 100%;
        box-shadow: 0 3px 6px rgba(0,0,0,0.1);
    }
    
    .dashboard-icon {
        font-size: 2.5rem;
        color: #6c757d;
        opacity: 0.7;
    }
    
    .status-active {
        color: #28a745;
        font-weight: bold;
    }
    
    .status-inactive {
        color: #dc3545;
    }
    
    .action-buttons {
        display: flex;
        gap: 5px;
    }
    
    .banner-list {
        max-height: 300px;
        overflow-y: auto;
    }
    
    .banner-item {
        display: flex;
        margin-bottom: 1rem;
        border-bottom: 1px solid #eee;
        padding-bottom: 1rem;
    }
    
    .banner-image {
        width: 80px;
        height: 60px;
        margin-right: 1rem;
        overflow: hidden;
    }
    
    .banner-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .banner-details {
        flex: 1;
    }
</style>

@code {
    private int bannerCount = 0;
    private int newsCount = 0;
    private int photoCount = 0;
    private List<News> latestNews = new List<News>();
    private List<Banner> activeBanners = new List<Banner>();

    protected override async Task OnInitializedAsync()
    {
        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        try
        {
            // Carica i dati per la dashboard
            // In un'implementazione reale, questi dati verrebbero caricati dai servizi API
            
            bannerCount = 5; // Esempio: questo valore dovrebbe venire dal tuo servizio
            newsCount = 12;
            photoCount = 47;
            
            // Esempio di notizie
            latestNews = new List<News>
            {
                new News { ID = Guid.NewGuid(), Titolo = "Nuova iniziativa comunale", DataPubblicazione = DateTime.Now.AddDays(-2), IsAttiva = true },
                new News { ID = Guid.NewGuid(), Titolo = "Evento culturale in programma", DataPubblicazione = DateTime.Now.AddDays(-5), IsAttiva = true },
                new News { ID = Guid.NewGuid(), Titolo = "Chiusura uffici per festività", DataPubblicazione = DateTime.Now.AddDays(-10), IsAttiva = false }
            };
            
            // Esempio di banner
            activeBanners = new List<Banner>
            {
                new Banner { ID = Guid.NewGuid(), Title = "Promozione servizi", Path = "/images/banner1.jpg", IsAttivo = true },
                new Banner { ID = Guid.NewGuid(), Title = "Nuovo sito web", Path = "/images/banner2.jpg", IsAttivo = true }
            };
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errore nel caricamento dei dati dashboard: {ex.Message}");
            // Gestione degli errori, eventualmente con notifica all'utente
        }
    }
}
